buildscript {
    ext.kotlin_version = "1.3.72"
    ext.tornadofx_version = "1.7.17"
    ext.junit_version = "5.1.0"
    ext.koin_version = "2.1.6"
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.1.0"
        classpath "org.koin:koin-gradle-plugin:$koin_version"
    }
}

group 'com.simplesoft.duongdt3.tornadofx'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'koin'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    compile "no.tornado:tornadofx:$tornadofx_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-javafx:1.3.8"
    compile "com.google.code.gson:gson:2.8.6"
    compile fileTree(dir: 'libs', include: ['*.jar'])

    //image comparison #https://github.com/romankh3/image-comparison
    compile 'com.github.romankh3:image-comparison:4.3.0'

    //Mock server
    compile 'org.mock-server:mockserver-client-java:5.11.1'

    //zip
    compile 'net.lingala.zip4j:zip4j:2.6.2'

    // Koin for Kotlin apps
    compile "org.koin:koin-core:$koin_version"
    compile "org.koin:koin-core-ext:$koin_version"
    // Testing
    testCompile "org.koin:koin-test:$koin_version"

    testCompile "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junit_version"
}

sourceSets {
    main {
        java.srcDirs += ["src/main/java"]
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
    manifest {
        attributes 'Main-Class': 'com.simplesoft.duongdt3.tornadofx.MyApp'
    }

    // This line of code recursively collects and copies all of a project's files
    // and adds them to the JAR itself. One can extend this task, to skip certain
    // files or particular types at will
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}